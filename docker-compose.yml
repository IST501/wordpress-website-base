services:
  db:
    image: mariadb:10.11
    container_name: wp_database
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      TZ: America/Sao_Paulo
      MYSQL_INITDB_ARGS: "--innodb-buffer-pool-size=256M --innodb-log-file-size=64M"
    volumes:
      - db_data:/var/lib/mysql
      - ./mysql/my.cnf:/etc/mysql/conf.d/my.cnf:ro
    networks:
      - wp_network
    ports:
      - "3306:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  wordpress:
    depends_on:
      db:
        condition: service_healthy
    build: .
    container_name: wp_site
    restart: unless-stopped
    environment:
      WORDPRESS_DB_HOST: ${WORDPRESS_DB_HOST}
      WORDPRESS_DB_USER: ${WORDPRESS_DB_USER}
      WORDPRESS_DB_PASSWORD: ${WORDPRESS_DB_PASSWORD}
      WORDPRESS_DB_NAME: ${WORDPRESS_DB_NAME}
      WORDPRESS_DEBUG: ${WORDPRESS_DEBUG}
      TZ: America/Sao_Paulo
      WORDPRESS_CONFIG_EXTRA: |
        define('WP_DEBUG_LOG', true);
        define('WP_DEBUG_DISPLAY', false);
        define('WP_MEMORY_LIMIT', '256M');
    volumes:
      # Mirrors your entire local wp-content folder into the container
      - ./wp-content:/var/www/html/wp-content
      # Keeps the upload configuration
      - ./uploads.ini:/usr/local/etc/php/conf.d/uploads.ini
    networks:
      - wp_network
    ports:
      - "${WP_PORT:-8080}:80"
    # The command now just starts the server, without installation logic.
    command: apache2-foreground
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "-f",
          "http://localhost/wp-admin/install.php",
          "||",
          "curl",
          "-f",
          "http://localhost",
        ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  phpmyadmin:
    depends_on:
      - db
    image: phpmyadmin/phpmyadmin
    container_name: wp_phpmyadmin
    restart: unless-stopped
    environment:
      PMA_HOST: db
      PMA_PORT: 3306
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    networks:
      - wp_network
    ports:
      - "${PMA_PORT:-8081}:80"

  mailhog:
    image: mailhog/mailhog
    container_name: wp_mailhog
    restart: unless-stopped
    networks:
      - wp_network
    ports:
      - "1025:1025"
      - "${MAILHOG_PORT:-8025}:8025"

volumes:
  db_data:

networks:
  wp_network:
    driver: bridge